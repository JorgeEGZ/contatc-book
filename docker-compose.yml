version: '3.8'

services:
  db:
    image: postgres:13
    container_name: contact_db
    env_file:
      - .env 
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-contactdb}
      POSTGRES_USER: ${POSTGRES_USER:-contactuser}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-contactpassword}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - contact-network

  backend:
    build: ./backend
    container_name: contact_backend
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - ./backend:/app
    ports:
      - "8000:8000"
    env_file:
      - .env 
    environment:
      DEBUG: ${DEBUG:-True}
      SECRET_KEY: ${SECRET_KEY:-dev-secret-key}
      POSTGRES_DB: ${POSTGRES_DB:-contactdb}
      POSTGRES_USER: ${POSTGRES_USER:-contactuser}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-contactpassword}
      POSTGRES_HOST: db
      POSTGRES_PORT: 5432
      ALLOWED_HOSTS: ${ALLOWED_HOSTS:-localhost,127.0.0.1,backend}
    depends_on:
      - db
    networks:
      - contact-network

  frontend:
    build: ./frontend
    container_name: contact_frontend
    ports:
      - "4200:4200"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    env_file:
      - .env 
    environment:
      NG_APP_API_URL: ${NG_APP_API_URL:-http://localhost:8000/api}
    depends_on:
      - backend
    networks:
      - contact-network

volumes:
  postgres_data:

networks:
  contact-network:
    driver: bridge